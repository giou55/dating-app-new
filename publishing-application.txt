Αλλάζουμε το "outputPath" μέσα στο αρχείο angular.json:

"build": {
          "options": {
            "outputPath": "dist/client",

"build": {
          "options": {
            "outputPath": "../api/wwwroot",

--------------------------------------------------------------------------

We configure API server to serve default and static files inside Program.cs:

// when we say default files, it means that is going to look for the index.html from WWW root folder 
app.UseDefaultFiles();

// when we say static files, it means that is going to look a WWW root folder and 
// serve the content from inside there
app.UseStaticFiles();

---------------------------------------------------------------------------

Γράφουμε στο terminal:
ng build
και δημιουργούνται τα στατικά αρχεία μέσα στον φάκελο api/wwwroot

----------------------------------------------------------------------------

Αφού έχουμε εγκαταστημένο το docker, γράφουμε στο terminal:
docker run --name postgres -e POSTGRES_PASSWORD=postgrespw -p 5432:5432 -d postgres:latest
και τρέχει ο PostgreSQL server στο localhost:5432 ή 0.0.0.0:5432,
και μπορούμε να συνδεθούμε

------------------------------------------------------------------------------

Για το VS Code εγκαθιστούμε το παρακάτω extension:
PostgreSQL (PostgreSQL Management Tool by Chris Kolkman)

------------------------------------------------------------------------------

Μέσα από το NuGet gallery εγκαθιστάμε το package:
Npgsql.EntityFrameworkCore.PostgreSQL (by Shay Rojansky, Austin Drenski, Yoh Deadfall)

------------------------------------------------------------------------------------

Πάμε στον φάκελο api, ελέγχουμε οτι ο local server έχει σταματήσει, 
και διαγράφουμε την υπάρχουσα βάση SQLite:
dotnet ef database drop

-----------------------------------------------------------------------------------

Πάμε στο αρχείο appsettings.Development.json και αλλάζουμε το connection string:

"ConnectionStrings": {
    "DefaultConnection": "Data source=datingapp.db"
}

"ConnectionStrings": {
    "DefaultConnection": "Server=localhost; Port=5432; User Id=postgres; Password=postgrespw; Database=datingapp"
}

------------------------------------------------------------------------------------

Κάνουμε την παρακάτω αλλαγή στο αρχείο ApplicationServiceExtensions.cs:

services.AddDbContext<DataContext>(options => 
{
    options.UseSqlite(config.GetConnectionString("DefaultConnection"));
});

services.AddDbContext<DataContext>(options => 
{
    options.UseNpgsql(config.GetConnectionString("DefaultConnection"));
});

----------------------------------------------------------------------------------------

Διαγράφουμε τον φάκελο Migrations μαζί με τα περιεχόμενά του.
Και μετά γράφουμε:
dotnet ef migrations add PostgresInitial -o Data/Migrations
και δημιουργείται ένα νέο μεγάλο migration για το Postgres

-------------------------------------------------------------------------------------

Τρέχουμε τον server, να τρέξουν και τα migrations, να φτιαχτεί η βάση,
και να γίνει το seeding των users:
dotnet run
Αν υπάρξει πρόβλημα στα migrations και στην δημιουργία της βάσης, 
βρίσκουμε το πρόβλημα και κάνουμε πάλι:
dotnet ef database drop 
και μετά πάλι:
dotnet run

------------------------------------------------------------------------------------

Πάμε στο PostgreSQL explorer package να δούμε την βάση μας

-----------------------------------------------------------------------------------